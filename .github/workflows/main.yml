# This is a basic workflow to help you get started with Actions

name: CI
concurrency: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

env:
  DOTNET_VERSION: '6.0.101'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 🛒 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

      - name: ⚙️ Setup dotnet 6.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: ⚙️ Setup GIT versioning
        uses: dotnet/nbgv@master
        env: 
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        id: nbgv
        with:
          setAllVars: true
      
      - run: echo "NBGV_SemVer2 $NBGV_SemVer2"
      
      - name: Restore dependancies
        run: dotnet restore
      
      - name: 🛠️ Building library in release mode
        run: dotnet build --no-restore --configuration Release

      - name: unit tests and report
        uses: zyborg/dotnet-tests-report@v1
        with:
          project_path: tests/AspNet.Security.OAuth.OneID.Tests/AspNet.Security.OAuth.OneID.Tests.csproj
          report_name: SerapisMedicalAPI_Tests
          report_title: OneID oAuth Middleware Tests
          github_token: ${{ secrets.GITHUB_TOKEN }}
          gist_name: middleware_tests.md
          gist_badge_label: 'oneID Middleware: %Counters_passed%/%Counters_total%'
          gist_token: ${{ secrets.GIST_TOKEN }}

      # pack and publish the nuget package
      - name: Pack nuget packages
        run: dotnet pack src/AspNet.Security.OAuth.OneID/AspNet.Security.OAuth.OneID.csproj --configuration Release --no-build --output nupkgs --include-symbols --include-source -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:PackageVersion=${{env.NBGV_SemVer1}}

      - name: Get NuGet
        uses: nuget/setup-nuget@v1.1.1
        with:
          nuget-api-key: ${{secrets.NUGET_API_KEY}}
          
      - name: Release artifacts to NuGet
        run : |
          nuget push nupkgs/*.nupkg -Source https://api.nuget.org/v3/index.json -SkipDuplicate
